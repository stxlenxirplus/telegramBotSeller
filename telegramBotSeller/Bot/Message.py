from typing import Union
from aiogram import types
from aiogram.dispatcher import FSMContext
import Keyboard
from models.ShowCase import get_all_category
from models.User import User


async def show_catalog(update: Union[types.Message, types.CallbackQuery], state: FSMContext):
    context = "–í –Ω–∞–ª–∏—á–∏–∏ –∏–º–µ—é—Ç—Å—è ‚ñº"
    catalog = [await i.get_ for i in await get_all_category()]
    await state.set_state()
    if isinstance(update, types.Message):
        await update.answer(context, reply_markup=Keyboard.get_category(catalog))
    if isinstance(update, types.CallbackQuery):
        await update.message.edit_text(context, reply_markup=Keyboard.get_category(catalog))


async def show_profile(update: Union[types.Message, types.CallbackQuery], state: FSMContext):
    user = User(update.from_user.id)
    user_data = await user.get_information
    context = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.from_user.full_name}\n\n" \
              f"üîë –í–∞—à ID: {update.from_user.id}\n" \
              f"üíµ –í–∞—à –±–∞–ª–∞–Ω—Å: {user_data.balance}‚ÇΩ"
    from googletrans import Translator
    translator = Translator()

    context = translator.translate(context).text
    await state.set_state()
    if isinstance(update, types.Message):
        await update.answer(context, reply_markup=Keyboard.get_profile())
    if isinstance(update, types.CallbackQuery):
        await update.message.edit_text(context, reply_markup=Keyboard.get_profile())
    print("–Ø –æ—Ç–≤–µ—Ç–∏–ª")